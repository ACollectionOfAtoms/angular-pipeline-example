#!/bin/bash -e

if [[ -z ${ROLLBAR_ACCESS_TOKEN+x} ]]; then
  echo 'ROLLBAR_ACCESS_TOKEN is not set'
  exit 1
fi

if [[ -z ${GIT_COMMIT_SHA+x} ]]; then
  echo 'GIT_COMMIT_SHA is not set'
  exit 1
fi

if [[ -z ${GIT_COMMIT_AUTHOR+x} ]]; then
  echo 'GIT_COMMIT_AUTHOR is not set'
  exit 1
fi

if [[ -z ${1+x} ]]; then
  echo 'ERROR: status is not specified'
  echo
  echo 'Usage: rollbar-deploy [started|succeeded|failed]'
  exit 1
fi

DEPLOY_ID=""
DEPLOY_ID_FILE=.deploy_id

if [[ -f ${DEPLOY_ID_FILE} ]]; then
  DEPLOY_ID=$(cat ${DEPLOY_ID_FILE})
fi

DEPLOY_STATUS="${1}"

case ${DEPLOY_STATUS} in
  started)
    DEPLOY_ID=$(curl -fs https://api.rollbar.com/api/1/deploy/ \
      -F access_token=${ROLLBAR_ACCESS_TOKEN} \
      -F status=started \
      -F environment=production \
      -F revision=${GIT_COMMIT_SHA} \
      -F local_username=${GIT_COMMIT_AUTHOR} | jq -r '.data.deploy_id')
    echo "$DEPLOY_ID" > ${DEPLOY_ID_FILE}
    echo
    echo "Rollbar notified of deploy: deploy_id=${DEPLOY_ID} revision=${GIT_COMMIT_SHA} status=${DEPLOY_STATUS}"
    ;;
  succeeded)
    curl -fs -o /dev/null -XPATCH https://api.rollbar.com/api/1/deploy/${DEPLOY_ID} \
      -F access_token=${ROLLBAR_ACCESS_TOKEN} \
      -F status=succeeded
    echo
    echo "Rollbar deploy updated: id=${DEPLOY_ID} status=${DEPLOY_STATUS}"
    ;;
  failed)
    curl -fs -o /dev/null -XPATCH https://api.rollbar.com/api/1/deploy/${DEPLOY_ID} \
      -F access_token=${ROLLBAR_ACCESS_TOKEN} \
      -F status=failed
    echo
    echo "Rollbar deploy updated: id=${DEPLOY_ID} status=${DEPLOY_STATUS}"
    ;;
  *)
    echo "Unsupported DEPLOY_STATUS: $DEPLOY_STATUS"
    exit 1
  ;;
esac


