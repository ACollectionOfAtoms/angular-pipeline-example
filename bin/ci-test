#!/bin/bash

if [[ -z ${GIT_COMMIT_SHA+x} ]]; then
  echo 'GIT_COMMIT_SHA is not set'
  exit 1
fi

if [[ -z ${GIT_BRANCH+x} ]]; then
  echo 'GIT_BRANCH is not set'
  exit 1
fi

if [[ -z ${TEST_IMAGE+x} ]]; then
  echo 'TEST_IMAGE is not set'
  exit 1
fi

if [[ -z ${DOCKER_BUILD_CHECKSUM+x} ]]; then
  echo 'DOCKER_BUILD_CHECKSUM is not set'
  exit 1
fi

if [[ "${CI}" == "true" ]]; then
  if [[ -z ${MASTER_BUILD_S3_KEY_PREFIX+x} ]]; then
    echo 'MASTER_BUILD_S3_KEY_PREFIX must be set when CI=true'
    exit 1
  fi

  if [[ -z ${BUILD_S3_KEY_PREFIX+x} ]]; then
    echo 'BUILD_S3_KEY_PREFIX must be set when CI=true'
    exit 1
  fi
fi

REPORTS_VOLUME=reports-${DOCKER_BUILD_CHECKSUM}
CONTAINER_NAME=test-${DOCKER_BUILD_CHECKSUM}
CONTAINER_SRC_DIR=/usr/src/app
CONTAINER_REPORTS_ROOT_DIR=${CONTAINER_SRC_DIR}/reports
BUILD_REPORTS_S3_KEY_PREFIX=${BUILD_S3_KEY_PREFIX%/}/reports/app/
MASTER_REPORTS_S3_KEY_PREFIX=${MASTER_BUILD_S3_KEY_PREFIX%/}/reports/app/
MASTER_ALLURE_HISTORY_S3_KEY_PREFIX=${MASTER_REPORTS_S3_KEY_PREFIX%/}/allure/html/history/

is-ci-context() {
  [[ "${CI}" == "true" ]]
}

is-master-branch() {
  [[ "${GIT_BRANCH}" == "master" ]]
}

clean() {
  docker rm ${CONTAINER_NAME} 2>/dev/null >/dev/null || :
  docker volume rm ${REPORTS_VOLUME} 2>/dev/null >/dev/null || :
}

generate-allure-report() {
  docker run --rm \
    --env AWS_DEFAULT_REGION \
    --env AWS_ACCESS_KEY_ID \
    --env AWS_SECRET_ACCESS_KEY \
    --workdir /work \
    --volume ${REPORTS_VOLUME}:/work \
    mesosphere/aws-cli s3 cp --quiet --recursive \
      ${MASTER_ALLURE_HISTORY_S3_KEY_PREFIX} /work/app/allure/xml/history/

  export ALLURE_ENVIRONMENT="Hostname=$(hostname)
Git.Commit=${GIT_COMMIT_SHA}
Git.Branch=${GIT_BRANCH}
Docker.Version=$(docker --version)
Docker.TestImage=${TEST_IMAGE}"

  docker run --rm \
    --env ALLURE_ENVIRONMENT \
    --workdir /work \
    --volume ${REPORTS_VOLUME}:/work \
    --entrypoint /bin/sh \
    mattupstate/allure -c '
      echo "$ALLURE_ENVIRONMENT" >> app/allure/xml/environment.properties &&
      cat app/allure/xml/environment.properties &&
      allure generate --clean --report-dir app/allure/html app/allure/xml'
}

publish-reports() {
  docker run --rm \
    --env AWS_DEFAULT_REGION \
    --env AWS_ACCESS_KEY_ID \
    --env AWS_SECRET_ACCESS_KEY \
    --workdir /work \
    --volume ${REPORTS_VOLUME}:/work \
    mesosphere/aws-cli s3 cp --quiet --acl private --recursive \
      /work/app/ ${BUILD_REPORTS_S3_KEY_PREFIX}

  if [[ "${GIT_BRANCH}" == "master" ]]; then
    docker run --rm \
    --env AWS_DEFAULT_REGION \
    --env AWS_ACCESS_KEY_ID \
    --env AWS_SECRET_ACCESS_KEY \
    --workdir /work \
    --volume ${REPORTS_VOLUME}:/work \
    mesosphere/aws-cli s3 cp --quiet --acl private --recursive \
      /work/app/ ${MASTER_REPORTS_S3_KEY_PREFIX}
  fi
}

code-climate-start() {
  docker run --rm \
    --env CC_TEST_REPORTER_ID \
    --env GIT_COMMIT_SHA \
    --env GIT_BRANCH \
    --env GIT_COMMITED_AT \
    cloudbuilders/cc-test-reporter before-build
}

code-climate-end() {
  docker run --rm \
    --env CC_TEST_REPORTER_ID \
    --env GIT_COMMIT_SHA \
    --env GIT_BRANCH \
    --env GIT_COMMITED_AT \
    --workdir /work \
    --volume ${REPORTS_VOLUME}:/work/reports \
    --volume ${PWD}:/work \
    --entrypoint /bin/sh \
    cloudbuilders/cc-test-reporter -c '
     cc-test-reporter format-coverage -o - -t lcov -p '${CONTAINER_SRC_DIR}'/ reports/app/coverage/lcov.info \
        | cc-test-reporter upload-coverage -i -'
}

do-reports() {
  is-ci-context && is-master-branch \
    && generate-allure-report && publish-reports || :
}

do-tests() {
  docker volume create ${REPORTS_VOLUME} > /dev/null

  is-ci-context && is-master-branch && code-climate-start || :

  docker run --name ${CONTAINER_NAME} \
    --volume ${REPORTS_VOLUME}:${CONTAINER_REPORTS_ROOT_DIR} \
    --env ALLURE_RESULTS_DIR=${CONTAINER_REPORTS_ROOT_DIR}/app/allure/xml \
    --env COVERAGE_REPORT_DIR=${CONTAINER_REPORTS_ROOT_DIR}/app/coverage \
    --security-opt seccomp=${PWD}/etc/docker/seccomp/chrome.json \
    ${TEST_IMAGE} \
    npm run test-ci

  is-ci-context && is-master-branch && code-climate-end || :
}

do-tests
TEST_EXIT_CODE=$?
do-reports
clean

exit $TEST_EXIT_CODE
